(()=>{"use strict";var __webpack_modules__={396:()=>{eval('\n;// CONCATENATED MODULE: ./src/js/PubSub.js\nconst PubSub = (function() {\n    let subscribers = {};\n\n    const subscribe = function(eventId, fn) {\n        if (!(eventId in subscribers)) {\n            subscribers[eventId] = [];\n        }\n\n        subscribers[eventId].push(fn);\n    };\n\n    const unsubscribe = function(eventId, fn) {\n        if (eventId in subscribers) {\n            const idx = subscribers[eventId].indexOf(fn);\n            if (idx !== -1) {\n                subscribers[eventId].splice(idx, 1);\n            }\n        }\n    }\n\n    const publish = function(eventId, data) {\n        if (eventId in subscribers) {\n            subscribers[eventId].forEach(fn => {\n                fn(data);\n            });\n        }\n    }\n\n    return { subscribe, unsubscribe, publish };\n})();\n\n/* harmony default export */ const js_PubSub = (PubSub);\n;// CONCATENATED MODULE: ./src/js/Todos.js\n\n\nclass Todo {\n    #title;\n    #description;\n    #dueDate;\n    #priority;\n    #notes;\n    #onChange;\n\n    /**\n     * Creates a Todo\n     * \n     * @param {string} title The title of the Todo \n     * @param {string} description The description of the Todo\n     * @param {Date} dueDate The due date of the Todo\n     * @param {number} priority The priority of the Todo (an integer, lower is higher priority)\n     * @param {string} [notes=""] Optional notes to include with the Todo\n     * @param {?string} [onChange=null] The event to publish when a todo is changed.\n     * If onChange is null, then no event will be published. \n     * Otherwise, publish using the current Todo object as data.\n     */\n    constructor(title, description, dueDate, priority, notes="", onChange=null) {\n        this.#title = title;\n        this.#description = description;\n        this.#dueDate = dueDate;\n        this.#priority = priority;\n        this.#notes = notes;\n        this.#onChange = onChange;\n    }\n\n    get title() { return this.#title; }\n    set title(value) {\n        this.#title = value;\n        if (this.#onChange !== null) { js_PubSub.publish(this.#onChange, this) };\n    }\n\n    get description() { return this.#description; }\n    set description(value) {\n        this.#description = value;\n        if (this.#onChange !== null) { js_PubSub.publish(this.#onChange, this) };\n    }\n\n    get dueDate() { return this.#dueDate; }\n    set dueDate(value) {\n        this.#dueDate = value;\n        if (this.#onChange !== null) { js_PubSub.publish(this.#onChange, this) };\n    }\n\n    get priority() { return this.#priority; }\n    set priority(value) {\n        this.#priority = value;\n        if (this.#onChange !== null) { js_PubSub.publish(this.#onChange, this) };\n    }\n\n    get notes() { return this.#notes; }\n    set notes(value) {\n        this.#notes = value;\n        if (this.#onChange !== null) { js_PubSub.publish(this.#onChange, this) };\n    }\n}\n\nclass Project {\n    #todos\n\n    /**\n     * \n     * @param {Todo[]} [todos=[]] An array of Todos \n     */\n    constructor(todos=[]) {\n        this.#todos = todos.map(todo => ({...todo}));    \n    }\n}\n\nclass ProjectList {\n    #projects\n\n    /**\n     * \n     * @param {Project[]} projects An array of projects \n     */\n    constructor(projects=[]) {\n        this.#projects = projects.map(project => ({...project}));\n    }\n}\n\nnew Todo()\n;// CONCATENATED MODULE: ./src/js/index.js\n\n\nconst todo = new Todo("Title", "Desc", new Date(), 0, "...notes");\nconsole.log(todo);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk2LmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQSxhQUFhO0FBQ2IsQ0FBQzs7QUFFRCxnREFBZSxNQUFNLEU7O0FDL0JTOztBQUV2QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsTUFBTTtBQUNyQixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EsdUNBQXVDLFNBQU07QUFDN0M7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSx1Q0FBdUMsU0FBTTtBQUM3Qzs7QUFFQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLHVDQUF1QyxTQUFNO0FBQzdDOztBQUVBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsdUNBQXVDLFNBQU07QUFDN0M7O0FBRUEsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSx1Q0FBdUMsU0FBTTtBQUM3QztBQUNBOztBQUVPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQTs7QUFFTztBQUNQOztBQUVBO0FBQ0E7QUFDQSxlQUFlLFdBQVc7QUFDMUI7QUFDQTtBQUNBLG1EQUFtRCxXQUFXO0FBQzlEO0FBQ0E7O0FBRUEsVTs7QUN0RitCOztBQUUvQixpQkFBaUIsSUFBSTtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLXRlbXBsYXRlLTEvLi9zcmMvanMvUHViU3ViLmpzP2RhZmYiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdGVtcGxhdGUtMS8uL3NyYy9qcy9Ub2Rvcy5qcz85ZGUwIiwid2VicGFjazovL2Zyb250ZW5kLXRlbXBsYXRlLTEvLi9zcmMvanMvaW5kZXguanM/N2JhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQdWJTdWIgPSAoZnVuY3Rpb24oKSB7XG4gICAgbGV0IHN1YnNjcmliZXJzID0ge307XG5cbiAgICBjb25zdCBzdWJzY3JpYmUgPSBmdW5jdGlvbihldmVudElkLCBmbikge1xuICAgICAgICBpZiAoIShldmVudElkIGluIHN1YnNjcmliZXJzKSkge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnNbZXZlbnRJZF0gPSBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzW2V2ZW50SWRdLnB1c2goZm4pO1xuICAgIH07XG5cbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IGZ1bmN0aW9uKGV2ZW50SWQsIGZuKSB7XG4gICAgICAgIGlmIChldmVudElkIGluIHN1YnNjcmliZXJzKSB7XG4gICAgICAgICAgICBjb25zdCBpZHggPSBzdWJzY3JpYmVyc1tldmVudElkXS5pbmRleE9mKGZuKTtcbiAgICAgICAgICAgIGlmIChpZHggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnNbZXZlbnRJZF0uc3BsaWNlKGlkeCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBwdWJsaXNoID0gZnVuY3Rpb24oZXZlbnRJZCwgZGF0YSkge1xuICAgICAgICBpZiAoZXZlbnRJZCBpbiBzdWJzY3JpYmVycykge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnNbZXZlbnRJZF0uZm9yRWFjaChmbiA9PiB7XG4gICAgICAgICAgICAgICAgZm4oZGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7IHN1YnNjcmliZSwgdW5zdWJzY3JpYmUsIHB1Ymxpc2ggfTtcbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IFB1YlN1YjsiLCJpbXBvcnQgUHViU3ViIGZyb20gXCIuL1B1YlN1YlwiO1xuXG5leHBvcnQgY2xhc3MgVG9kbyB7XG4gICAgI3RpdGxlO1xuICAgICNkZXNjcmlwdGlvbjtcbiAgICAjZHVlRGF0ZTtcbiAgICAjcHJpb3JpdHk7XG4gICAgI25vdGVzO1xuICAgICNvbkNoYW5nZTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBUb2RvXG4gICAgICogXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlIFRoZSB0aXRsZSBvZiB0aGUgVG9kbyBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGVzY3JpcHRpb24gVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBUb2RvXG4gICAgICogQHBhcmFtIHtEYXRlfSBkdWVEYXRlIFRoZSBkdWUgZGF0ZSBvZiB0aGUgVG9kb1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwcmlvcml0eSBUaGUgcHJpb3JpdHkgb2YgdGhlIFRvZG8gKGFuIGludGVnZXIsIGxvd2VyIGlzIGhpZ2hlciBwcmlvcml0eSlcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW25vdGVzPVwiXCJdIE9wdGlvbmFsIG5vdGVzIHRvIGluY2x1ZGUgd2l0aCB0aGUgVG9kb1xuICAgICAqIEBwYXJhbSB7P3N0cmluZ30gW29uQ2hhbmdlPW51bGxdIFRoZSBldmVudCB0byBwdWJsaXNoIHdoZW4gYSB0b2RvIGlzIGNoYW5nZWQuXG4gICAgICogSWYgb25DaGFuZ2UgaXMgbnVsbCwgdGhlbiBubyBldmVudCB3aWxsIGJlIHB1Ymxpc2hlZC4gXG4gICAgICogT3RoZXJ3aXNlLCBwdWJsaXNoIHVzaW5nIHRoZSBjdXJyZW50IFRvZG8gb2JqZWN0IGFzIGRhdGEuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbm90ZXM9XCJcIiwgb25DaGFuZ2U9bnVsbCkge1xuICAgICAgICB0aGlzLiN0aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLiNkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLiNkdWVEYXRlID0gZHVlRGF0ZTtcbiAgICAgICAgdGhpcy4jcHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy4jbm90ZXMgPSBub3RlcztcbiAgICAgICAgdGhpcy4jb25DaGFuZ2UgPSBvbkNoYW5nZTtcbiAgICB9XG5cbiAgICBnZXQgdGl0bGUoKSB7IHJldHVybiB0aGlzLiN0aXRsZTsgfVxuICAgIHNldCB0aXRsZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLiN0aXRsZSA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy4jb25DaGFuZ2UgIT09IG51bGwpIHsgUHViU3ViLnB1Ymxpc2godGhpcy4jb25DaGFuZ2UsIHRoaXMpIH07XG4gICAgfVxuXG4gICAgZ2V0IGRlc2NyaXB0aW9uKCkgeyByZXR1cm4gdGhpcy4jZGVzY3JpcHRpb247IH1cbiAgICBzZXQgZGVzY3JpcHRpb24odmFsdWUpIHtcbiAgICAgICAgdGhpcy4jZGVzY3JpcHRpb24gPSB2YWx1ZTtcbiAgICAgICAgaWYgKHRoaXMuI29uQ2hhbmdlICE9PSBudWxsKSB7IFB1YlN1Yi5wdWJsaXNoKHRoaXMuI29uQ2hhbmdlLCB0aGlzKSB9O1xuICAgIH1cblxuICAgIGdldCBkdWVEYXRlKCkgeyByZXR1cm4gdGhpcy4jZHVlRGF0ZTsgfVxuICAgIHNldCBkdWVEYXRlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuI2R1ZURhdGUgPSB2YWx1ZTtcbiAgICAgICAgaWYgKHRoaXMuI29uQ2hhbmdlICE9PSBudWxsKSB7IFB1YlN1Yi5wdWJsaXNoKHRoaXMuI29uQ2hhbmdlLCB0aGlzKSB9O1xuICAgIH1cblxuICAgIGdldCBwcmlvcml0eSgpIHsgcmV0dXJuIHRoaXMuI3ByaW9yaXR5OyB9XG4gICAgc2V0IHByaW9yaXR5KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuI3ByaW9yaXR5ID0gdmFsdWU7XG4gICAgICAgIGlmICh0aGlzLiNvbkNoYW5nZSAhPT0gbnVsbCkgeyBQdWJTdWIucHVibGlzaCh0aGlzLiNvbkNoYW5nZSwgdGhpcykgfTtcbiAgICB9XG5cbiAgICBnZXQgbm90ZXMoKSB7IHJldHVybiB0aGlzLiNub3RlczsgfVxuICAgIHNldCBub3Rlcyh2YWx1ZSkge1xuICAgICAgICB0aGlzLiNub3RlcyA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy4jb25DaGFuZ2UgIT09IG51bGwpIHsgUHViU3ViLnB1Ymxpc2godGhpcy4jb25DaGFuZ2UsIHRoaXMpIH07XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgUHJvamVjdCB7XG4gICAgI3RvZG9zXG5cbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge1RvZG9bXX0gW3RvZG9zPVtdXSBBbiBhcnJheSBvZiBUb2RvcyBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0b2Rvcz1bXSkge1xuICAgICAgICB0aGlzLiN0b2RvcyA9IHRvZG9zLm1hcCh0b2RvID0+ICh7Li4udG9kb30pKTsgICAgXG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgUHJvamVjdExpc3Qge1xuICAgICNwcm9qZWN0c1xuXG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIHtQcm9qZWN0W119IHByb2plY3RzIEFuIGFycmF5IG9mIHByb2plY3RzIFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByb2plY3RzPVtdKSB7XG4gICAgICAgIHRoaXMuI3Byb2plY3RzID0gcHJvamVjdHMubWFwKHByb2plY3QgPT4gKHsuLi5wcm9qZWN0fSkpO1xuICAgIH1cbn1cblxubmV3IFRvZG8oKSIsImltcG9ydCB7IFRvZG8gfSBmcm9tIFwiLi9Ub2Rvc1wiO1xuXG5jb25zdCB0b2RvID0gbmV3IFRvZG8oXCJUaXRsZVwiLCBcIkRlc2NcIiwgbmV3IERhdGUoKSwgMCwgXCIuLi5ub3Rlc1wiKTtcbmNvbnNvbGUubG9nKHRvZG8pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///396\n')}},__webpack_exports__={};__webpack_modules__[396]()})();